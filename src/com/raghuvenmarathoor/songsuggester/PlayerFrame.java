/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PlayerFrame.java
 *
 * Created on 1 Mar, 2013, 12:05:54 PM
 */
package com.raghuvenmarathoor.songsuggester;

import com.raghuvenmarathoor.mp3player.BasicPlayerTest;
import com.raghuvenmarathoor.mp3player.PlayListManager;
import com.raghuvenmarathoor.mp3player.SongMetadata;
import java.awt.Color;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.filechooser.FileFilter;
/**
 *
 * @author New User
 */
public class PlayerFrame extends javax.swing.JFrame {

    Thread playerThread = null;
    public static int playlistPointer = 0;
    
    public static boolean play = false;
    boolean pause = false;
    DefaultListModel playListlistmodel = null;
    BasicPlayerTest basePlayer = null;
    PlayListManager playListManager = null;
    /** Creates new form PlayerFrame */
    public PlayerFrame() {
        
        initComponents();
        playListlistmodel = new DefaultListModel();
        playListManager=new PlayListManager();
        basePlayer=new BasicPlayerTest();
        jListPlayList.setCellRenderer(new SelectedListItemStyle());
    }
    
    protected File retrieveFromPlaylist(){
        if(jListPlayList.getSelectedIndex() == -1){
            if(playListlistmodel.getSize() == 0){
                insertFilesToPlayList();
                jListPlayList.setSelectedIndex(0);
            } else {
                return new File(playListManager.extractFromPlaylist(0).getSongPath());
            }
            //JOptionPane.showMessageDialog(null, "selected Index :"+ jListPlayList.getSelectedIndex()+ playListlistmodel);
        }
        return new File(playListManager.extractFromPlaylist(jListPlayList.getSelectedIndex()).getSongPath());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelBitRate = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelChannels = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelSampleRate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelEncoder = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelTrackLength = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPlayList = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jButtonAddMusic = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabelFileName = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelAlbum = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelArtist = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelGenre = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabelPrevious = new javax.swing.JLabel();
        jLabelPlay = new javax.swing.JLabel();
        jLabelNext = new javax.swing.JLabel();
        jLabelStop = new javax.swing.JLabel();
        jSliderSeekbar = new javax.swing.JSlider();
        jSliderVolume = new javax.swing.JSlider();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelBitRate.setText("Bitrate");

        jLabel5.setText("Bit rate:");

        jLabel1.setText("Channels");

        jLabelChannels.setText("channel");

        jLabel2.setText("Sample Rate:");

        jLabelSampleRate.setText("sample");

        jLabel3.setText("Encoder :");

        jLabelEncoder.setText("encoder");

        jLabel11.setText("Track Length :");

        jLabelTrackLength.setText("tracklen");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTrackLength)
                    .addComponent(jLabelEncoder)
                    .addComponent(jLabelSampleRate)
                    .addComponent(jLabelChannels)
                    .addComponent(jLabelBitRate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelBitRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelChannels))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelSampleRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelEncoder))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelTrackLength))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jListPlayList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListPlayListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListPlayList);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Play List");

        jButtonAddMusic.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButtonAddMusic.setText("Add Music");
        jButtonAddMusic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddMusicMouseClicked(evt);
            }
        });
        jButtonAddMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddMusicActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAddMusic)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("File Name :");

        jLabelFileName.setText("<filename>");
        jLabelFileName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabelTitle.setText("<title>");

        jLabel7.setText("Title          :");

        jLabel9.setText("Album       :");

        jLabelAlbum.setText("<album>");

        jLabel8.setText("Artist        :");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabelArtist.setText("<artist>");

        jLabel10.setText("Genre       :");

        jLabelGenre.setText("<genre>");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(210, 210, 210))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(85, 85, 85))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelFileName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabelGenre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabelAlbum))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArtist)
                    .addComponent(jLabel8))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelPrevious.setIcon(new javax.swing.ImageIcon("C:\\Users\\New User\\Documents\\Project\\Images\\Icons Mediaplayer selected\\previous.png")); // NOI18N
        jLabelPrevious.setText("jLabel3");
        jLabelPrevious.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPreviousMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelPreviousMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelPreviousMouseExited(evt);
            }
        });

        jLabelPlay.setIcon(new javax.swing.ImageIcon("C:\\Users\\New User\\Documents\\Project\\Images\\Icons Mediaplayer selected\\play.png")); // NOI18N
        jLabelPlay.setText("jLabel1");
        jLabelPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPlayMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelPlayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelPlayMouseExited(evt);
            }
        });

        jLabelNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raghuvenmarathoor/mp3player/next.png"))); // NOI18N
        jLabelNext.setText("jLabel2");
        jLabelNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelNextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelNextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelNextMouseExited(evt);
            }
        });

        jLabelStop.setIcon(new javax.swing.ImageIcon("C:\\Users\\New User\\Documents\\Project\\Images\\Icons Mediaplayer selected\\stop.png")); // NOI18N
        jLabelStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelStopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelStopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelStopMouseExited(evt);
            }
        });

        jSliderSeekbar.setValue(0);

        jSliderVolume.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderVolume.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jSliderVolume.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderVolume.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderVolumeStateChanged(evt);
            }
        });
        jSliderVolume.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jSliderVolumeCaretPositionChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelStop, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabelPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelNext, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSliderVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSliderSeekbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNext, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jLabelStop, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSliderVolume, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jSliderSeekbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Music Player", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 634, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(" Music Suggestions", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jListPlayListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPlayListMouseClicked

        if(2==evt.getClickCount()){
            String path = playListManager.extractFromPlaylist(jListPlayList.getSelectedIndex()).getSongPath();
            playThisSong(new File(playListManager.extractFromPlaylist(jListPlayList.getSelectedIndex()).getSongPath()),jListPlayList.getSelectedIndex());
        } else {
            
        }
    // TODO add your handling code here:
}//GEN-LAST:event_jListPlayListMouseClicked

private void jButtonAddMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMusicActionPerformed
    
               
        // TODO add your handling code here:
}//GEN-LAST:event_jButtonAddMusicActionPerformed

public void playNextSong(){
    int nextIndex = 0;
    try {
    int currentIndex = jListPlayList.getSelectedIndex();
    
    if(currentIndex == playListlistmodel.getSize()-1){
        nextIndex = 0;
    }else if(currentIndex < playListlistmodel.getSize()){
        nextIndex = currentIndex + 1;
    }
    
    
    } catch(ArrayIndexOutOfBoundsException ex){
        if(playListlistmodel.getSize() != -1){
        nextIndex = 0;
        } else {
            insertFilesToPlayList();
            nextIndex = 0;
        }
    }
    File mp3File = new File(playListManager.extractFromPlaylist(nextIndex).getSongPath());
    jListPlayList.setSelectedIndex(nextIndex);
    playThisSong(mp3File,nextIndex);
}

public void playPreviousSong() {
   int previousIndex = 0;
   try {
    int currentIndex = jListPlayList.getSelectedIndex();
    
    if(currentIndex == 0){
        JOptionPane.showMessageDialog(null, "current index = 0");
        previousIndex = playListlistmodel.getSize()-1;
    }else if(currentIndex > 0){
        previousIndex = currentIndex - 1;
    }
    
    
    } catch(ArrayIndexOutOfBoundsException ex){
        if(playListlistmodel.getSize() != -1){
        previousIndex = 0;
        } else {
            insertFilesToPlayList();
            previousIndex = 0;
        }
    }
    File mp3File = new File(playListManager.extractFromPlaylist(previousIndex).getSongPath());
    jListPlayList.setSelectedIndex(previousIndex);
    playThisSong(mp3File,previousIndex);
        
    
}
private void jButtonAddMusicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddMusicMouseClicked
    
    insertFilesToPlayList();
    // TODO add your handling code here:
}//GEN-LAST:event_jButtonAddMusicMouseClicked

private void insertFilesToPlayList(){
    JFileChooser jFileChooser1=new JFileChooser();    
    File defaultDir=new File("F:\\Songs");
        jFileChooser1.setCurrentDirectory(defaultDir);
        FileFilter nw=new FileFilter() {

            @Override
            public boolean accept(File f) {
                if(f.getAbsolutePath().toString().endsWith(".mp3")||f.isDirectory())
                    return true;
                else
                    return false;
             
                
                //throw new UnsupportedOperationException("Not supported yet.");
                
            }

            @Override
            public String getDescription() {
                return "mp3 files or directories";
                //return "mp3 files or folders";
                //throw new UnsupportedOperationException("Not supported yet.");
            }
        };
       jFileChooser1.addChoosableFileFilter(nw);
               jFileChooser1.setMultiSelectionEnabled(true);
               
               int res=jFileChooser1.showOpenDialog(this);
               if(res==JFileChooser.APPROVE_OPTION){
                //   String[] listData = new String[10];
                   File[] selectedFiles;
                   selectedFiles = jFileChooser1.getSelectedFiles();
               for(File f:selectedFiles){
                
                //playListlistmodel.addElement(jFileChooser1.getSelectedFile().getName());
                try{
                    playListManager.addToPlaylist(f.getAbsolutePath());
                    playListlistmodel.addElement(playListManager.extractFromPlaylist(playListManager.getPlayListLength()-1).getSongInfo());
                    jListPlayList.validate();
                    jListPlayList.setModel(playListlistmodel);
                
                    jListPlayList.updateUI();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
               }
                   //jListPlayList.
               
    }
}
private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jComboBox1ActionPerformed

private void jLabelStopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelStopMouseExited
jLabelStop.setBorder(BorderFactory.createEmptyBorder());// TODO add your handling code here:
}//GEN-LAST:event_jLabelStopMouseExited

private void jLabelStopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelStopMouseEntered
jLabelStop.setBorder(BorderFactory.createLineBorder(Color.BLUE));// TODO add your handling code here:
}//GEN-LAST:event_jLabelStopMouseEntered

private void jLabelStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelStopMouseClicked
 basePlayer.stop();
 play=false;
}//GEN-LAST:event_jLabelStopMouseClicked

private void jLabelNextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelNextMouseExited
jLabelNext.setBorder(BorderFactory.createEmptyBorder());// TODO add your handling code here:
}//GEN-LAST:event_jLabelNextMouseExited

private void jLabelNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelNextMouseEntered
jLabelNext.setBorder(BorderFactory.createLineBorder(Color.BLUE));// TODO add your handling code here:;
}//GEN-LAST:event_jLabelNextMouseEntered

private void jLabelNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelNextMouseClicked

    playNextSong();
    
}//GEN-LAST:event_jLabelNextMouseClicked

private void jLabelPlayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPlayMouseExited
jLabelPlay.setBorder(BorderFactory.createEmptyBorder());// TODO add your handling code here:
}//GEN-LAST:event_jLabelPlayMouseExited

private void jLabelPlayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPlayMouseEntered
jLabelPlay.setBorder(BorderFactory.createLineBorder(Color.BLUE));// TODO add your handling code here:
}//GEN-LAST:event_jLabelPlayMouseEntered

private void jLabelPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPlayMouseClicked

   
//    JFileChooser myFileChooser=new JFileChooser("F:\\Songs");
//    int av=myFileChooser.showOpenDialog(this);
//    //if(av=JFileChooser.APPROVE_OPTION)
      
      File mp3File = retrieveFromPlaylist();
      if(play == true && pause == false){
        
       pause();
        
       } else if(pause == true){
        resume();
        pause = false;
         } else if(play == false){
         playThisSong(mp3File,0);
       }
    
    
    
    
    
}//GEN-LAST:event_jLabelPlayMouseClicked

private void resume(){
    basePlayer.resume();
    jLabelPlay.setIcon(new ImageIcon(".\\Resources\\pause.png"));
}
private void jLabelPreviousMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPreviousMouseExited
jLabelPrevious.setBorder(BorderFactory.createEmptyBorder());// TODO add your handling code here:
}//GEN-LAST:event_jLabelPreviousMouseExited

private void jLabelPreviousMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPreviousMouseEntered

    
    jLabelPrevious.setBorder(BorderFactory.createLineBorder(Color.BLUE));// TODO add your handling code here:
}//GEN-LAST:event_jLabelPreviousMouseEntered

private void jLabelPreviousMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPreviousMouseClicked

    playPreviousSong();
    
}//GEN-LAST:event_jLabelPreviousMouseClicked

private void jSliderVolumeCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jSliderVolumeCaretPositionChanged

       // TODO add your handling code here:
}//GEN-LAST:event_jSliderVolumeCaretPositionChanged

private void jSliderVolumeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderVolumeStateChanged
    double volume =(double) jSliderVolume.getValue()/100;
    basePlayer.setVolume(volume);
}//GEN-LAST:event_jSliderVolumeStateChanged
   

public void playThisSong(File songFile,int playingIndex){
        basePlayer.stop();
        playlistPointer = playingIndex;
//        ListCellRenderer listcellRender = jListPlayList.getCellRenderer();
//        listcellRender.getListCellRendererComponent(jListPlayList, jListPlayList.getModel().getElementAt(playlistPointer) , playlistPointer, false , false).setBackground(Color.red);
//        jListPlayList.updateUI();
        
        basePlayer.play(songFile.getAbsolutePath(),this);
       play = true;     
    SongMetadata sngmeta=new SongMetadata(songFile.getAbsolutePath());
        jLabelBitRate.setText(sngmeta.getBitRate());
        jLabelChannels.setText(sngmeta.getChannels());
        jLabelEncoder.setText(sngmeta.getEncoder());
        jLabelSampleRate.setText(sngmeta.getSampleRate());
        jLabelTrackLength.setText(sngmeta.getTrackLength());
        jLabelAlbum.setText(sngmeta.getAlbum());
        jLabelArtist.setText(sngmeta.getArtist());
        jLabelTitle.setText(sngmeta.getTitle());
        jLabelGenre.setText(sngmeta.getGenre());
        jLabelFileName.setText(sngmeta.getFileName());
        //jLabelTotalTime.setText("/"+sngmeta.getTrackLength());
    jLabelPlay.setIcon(new ImageIcon(".\\Resources\\pause.png"));
 }
   
   
   public void pause(){
       
       basePlayer.pause();
       pause = true;
       jLabelPlay.setIcon(new ImageIcon(".\\Resources\\play.png"));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PlayerFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddMusic;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAlbum;
    private javax.swing.JLabel jLabelArtist;
    private javax.swing.JLabel jLabelBitRate;
    private javax.swing.JLabel jLabelChannels;
    private javax.swing.JLabel jLabelEncoder;
    private javax.swing.JLabel jLabelFileName;
    private javax.swing.JLabel jLabelGenre;
    private javax.swing.JLabel jLabelNext;
    private javax.swing.JLabel jLabelPlay;
    private javax.swing.JLabel jLabelPrevious;
    private javax.swing.JLabel jLabelSampleRate;
    private javax.swing.JLabel jLabelStop;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelTrackLength;
    private javax.swing.JList jListPlayList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSliderSeekbar;
    private javax.swing.JSlider jSliderVolume;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
